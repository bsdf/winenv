#!/usr/bin/env bash
# Summary: Show the current wine prefix and its origin
#
# Shows the currently selected wine prefix and how it was
# selected. To obtain only the prefix string, use `winenv
# prefix-name'.

# TODO: support WINEARCH, WINEDLLOVERRIDES, etc
# TODO: support DXVK
# TODO: support wine environment variables

set -e
[ -n "$WINENV_DEBUG" ] && set -x

# Provide winenv completions
command_prefix=winenv-prefix--
if [ "$1" = "--complete" ]; then
    declare -A commands
    for i in $WINENV_ROOT/libexec/$command_prefix*; do
        base=$(basename $i)
        command=${base##$command_prefix}
        commands[$command]=$command
    done

    if [[ -v "commands[$2]" ]]; then
        command="${commands[$2]}"
        command_path="$(command -v "$command_prefix$command")"
        exec "$command_path" --complete "${@:3}"
    else
        echo --bare
        printf '%s\n' "${commands[@]}"
        exit 0
    fi
fi

command="$1"
case "$command" in
    "") echo "$(winenv-prefix-name) (set by $(winenv-prefix-origin))"
        ;;

    "--bare")
        echo "$(winenv-prefix-name)"
        ;;

    "-h" | "--help" )
        echo "print usage..."
        ;;

    *)  command_path="$(command -v "winenv-prefix--$command" || true)"
        if [ -z "$command_path" ]; then
            echo "winenv: no such command \`prefix $command'" >&2
            exit 1
        fi

        shift 1
        exec "$command_path" "$@"
        ;;
esac
